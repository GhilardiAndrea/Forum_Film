// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_Api_Forum_Film.Data;

namespace Web_Api_Forum_Film.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("Web_Api_Forum_Film.Services.Class.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Budget")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genere")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lingua_Originale")
                        .HasColumnType("TEXT");

                    b.Property<string>("OverView")
                        .HasColumnType("TEXT");

                    b.Property<string>("Poster_Path")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titolo_Originale")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("Web_Api_Forum_Film.Services.Class.ForumPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TopicId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Web_Api_Forum_Film.Services.Class.Messaggio_Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data_Creazione")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ForumPostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Messaggio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ForumPostId");

                    b.HasIndex("UserId");

                    b.ToTable("Messaggi");
                });

            modelBuilder.Entity("Web_Api_Forum_Film.Services.Class.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FilmId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Web_Api_Forum_Film.Services.MyUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data_Nascita")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazione")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Web_Api_Forum_Film.Services.Class.ForumPost", b =>
                {
                    b.HasOne("Web_Api_Forum_Film.Services.Class.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId");

                    b.HasOne("Web_Api_Forum_Film.Services.MyUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_Api_Forum_Film.Services.Class.Messaggio_Class", b =>
                {
                    b.HasOne("Web_Api_Forum_Film.Services.Class.ForumPost", null)
                        .WithMany("Messaggi")
                        .HasForeignKey("ForumPostId");

                    b.HasOne("Web_Api_Forum_Film.Services.MyUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web_Api_Forum_Film.Services.Class.Topic", b =>
                {
                    b.HasOne("Web_Api_Forum_Film.Services.Class.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmId");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Web_Api_Forum_Film.Services.Class.ForumPost", b =>
                {
                    b.Navigation("Messaggi");
                });
#pragma warning restore 612, 618
        }
    }
}
